// Generated by CoffeeScript 1.4.0

/*
 * Description or Responsability
 *
 * @namespace KINOUT
 *
 * @author Javier Jimenez Villar <javi@tapquo.com> || @soyjavi
*/


(function() {
  var KINOUT;

  KINOUT = {
    slides: 0,
    index: {
      horizontal: 0,
      vertical: 0
    },
    init: function(config) {
      if (config == null) {
        config = {};
      }
      this.Element.init(config);
      this.Events.init();
      this.Url.read();
    }
  };

  window.KINOUT = KINOUT;

}).call(this);
// Generated by CoffeeScript 1.4.0

/*
 * Description or Responsability
 *
 * @namespace KINOUT
 * @class Boot
 *
 * @author Javier Jimenez Villar <javi@tapquo.com> || @soyjavi
*/


(function() {

  KINOUT.Constants = {
    MARKUP: {
      GLOW: "<div class='glow'></div>",
      COPYRIGHT: "<div class='copyright'><a href='http://biojazzard.github.com/kirbout'>birb<em>out</em></a>Glued by biojazzard</div>",
      CREDITS: "<div class='credits'><p>Based on <a href='https://github.com/soyjavi/Kinout'>kinoutJS</a> by <a href='https://github.com/soyjavi'>Javier Jim√©nez Villar</a> and <a href='https://github.com/bastianallgeier/kirbycms'>kirby</a> by <a href='https://github.com/bastianallgeier'>Bastian Allgeier</a></p></div>",
      PROGRESS: {
        horizontal: "<div class='progress horizontal' value='0' max='100'><span></span></div>",
        vertical: "<div class='progress vertical' value='0' max='100'><span></span></div>"
      }
    },
    SELECTOR: {
      KINOUT: ".kinout",
      SLIDE: ".kinout>section",
      SUBSLIDE: ".kinout>section.present>article",
      STEP: "section.present > article.present [data-step]",
      STEP_TO_SHOW: ":not([data-run='success'])",
      STEP_TO_HIDE: "[data-run='success']",
      PROGRESS: {
        horizontal: ".progress.horizontal",
        vertical: ".progress.vertical"
      }
    },
    STYLE: {
      PAST: "past",
      PRESENT: "present",
      FUTURE: "future"
    }
  };

}).call(this);
// Generated by CoffeeScript 1.4.0

/*
 * Description or Responsability
 *
 * @namespace KINOUT
 * @class Element
 *
 * @author Javier Jimenez Villar <javi@tapquo.com> || @soyjavi
*/


(function() {

  KINOUT.Element = (function(knt, undefined_) {
    var MARKUP, SELECTOR, init, progress, slides, steps, subslides, _el, _nextStep, _previousStep;
    SELECTOR = knt.Constants.SELECTOR;
    MARKUP = knt.Constants.MARKUP;
    _el = {
      parent: void 0,
      slides: [],
      steps: [],
      progress: {
        horizontal: void 0,
        vertical: void 0
      }
    };
    init = function(config) {
      _el.parent = $$(SELECTOR.KINOUT);
      if (config.template) {
        _el.parent.addClass(config.template);
      }
      return _el.parent.prepend(MARKUP.GLOW).append(MARKUP.COPYRIGHT);
    };
    slides = function() {
      if (!(_el.slides.length > 0)) {
        _el.slides = _el.parent.children('section');
      }
      return _el.slides;
    };
    subslides = function(slide_index) {
      return $$(_el.slides[slide_index]).children('article');
    };
    steps = function(next) {
      if (next) {
        return _nextStep();
      } else {
        return _previousStep();
      }
    };
    progress = function(type, value) {
      var property;
      if (type == null) {
        type = "horizontal";
      }
      if (value == null) {
        value = 0;
      }
      if (!_el.progress[type]) {
        _el.parent.append(MARKUP.PROGRESS[type]);
        _el.progress[type] = _el.parent.children(SELECTOR.PROGRESS[type]).children('span');
      }
      property = type === "horizontal" ? "width" : "height";
      _el.progress[type].style(property, "" + value + "%");
    };
    _nextStep = function() {
      var available, element, step, _i, _len, _steps;
      available = false;
      _steps = $$(SELECTOR.STEP + SELECTOR.STEP_TO_SHOW);
      for (_i = 0, _len = _steps.length; _i < _len; _i++) {
        element = _steps[_i];
        step = $$(element);
        if (step.data("run") !== "success") {
          step.data("run", "success");
          available = true;
          break;
        }
      }
      return available;
    };
    _previousStep = function() {
      var available, i, step, _steps;
      available = false;
      _steps = $$(SELECTOR.STEP + SELECTOR.STEP_TO_HIDE);
      i = _steps.length;
      while (i > 0) {
        step = $$(_steps[i - 1]);
        if (step.data("run") === "success") {
          step.data("run", "");
          available = true;
          break;
        }
        i--;
      }
      return available;
    };
    return {
      init: init,
      slides: slides,
      subslides: subslides,
      steps: steps,
      progress: progress
    };
  })(KINOUT);

}).call(this);
// Generated by CoffeeScript 1.4.0

/*
 * Description or Responsability
 *
 * @namespace KINOUT
 * @class Events
 *
 * @author Javier Jimenez Villar <javi@tapquo.com> || @soyjavi
*/


(function() {

  KINOUT.Events = (function(knt, $$, undefined_) {
    var DIRECTION, EVENTS, init, _analizeKeyEvent, _analizePoint, _onClick, _onHashChange, _onKeyDown, _onTouch, _onWheel, _subscribeEvents;
    EVENTS = {
      KEYDOWN: "keydown",
      CLICK: "click",
      TOUCH: "touchstart",
      HASHCHANGE: "hashchange",
      MOUSEWHEEL: "mousewheel"
    };
    DIRECTION = {
      LEFT: "left",
      RIGHT: "right",
      UP: "up",
      DOWN: "down"
    };
    init = function() {
      _subscribeEvents();
    };
    _subscribeEvents = function() {
      if ($$.isMobile()) {
        $$(document).on(EVENTS.TOUCH, _onTouch, false);
      } else {
        $$(document).on(EVENTS.KEYDOWN, _onKeyDown, false);
        $$(document).on(EVENTS.CLICK, _onClick, false);
        $$(document).on(EVENTS.MOUSEWHEEL, _onWheel, false);
      }
    };
    _onKeyDown = function(event) {
      if (event.keyCode >= 37 && event.keyCode <= 40) {
        _analizeKeyEvent(event);
        event.preventDefault();
      }
    };
    _onTouch = function(event) {
      var point;
      if (event.touches.length === 1) {
        event.preventDefault();
        point = {
          x: event.touches[0].clientX,
          y: event.touches[0].clientY
        };
        _analizePoint(point);
      }
    };
    _onClick = function(event) {
      var point;
      if ($$(event.target).closest('a').length) {
        return;
      }
      event.preventDefault();
      point = {
        x: event.clientX,
        y: event.clientY
      };
      _analizePoint(point);
    };
    _onWheel = function(event) {};
    _onHashChange = function() {
      return knt.Url.read();
    };
    _analizeKeyEvent = function(event) {
      switch (event.keyCode) {
        case 37:
          knt.Router.direction(DIRECTION.LEFT);
          break;
        case 39:
          knt.Router.direction(DIRECTION.RIGHT);
          break;
        case 38:
          knt.Router.direction(DIRECTION.UP);
          break;
        case 40:
          knt.Router.direction(DIRECTION.DOWN);
      }
    };
    _analizePoint = function(point) {
      var window_height, window_width;
      window_width = window.innerWidth * 0.3;
      window_height = window.innerHeight * 0.3;
      if (point.x < window_width) {
        knt.Router.direction(DIRECTION.LEFT);
      } else if (point.x > window.innerWidth - window_width) {
        knt.Router.direction(DIRECTION.RIGHT);
      } else if (point.y < window_height) {
        knt.Router.direction(DIRECTION.UP);
      } else {
        if (point.y > window.innerHeight - window_height) {
          knt.Router.direction(DIRECTION.DOWN);
        }
      }
    };
    return {
      init: init
    };
  })(KINOUT, Quo);

}).call(this);
// Generated by CoffeeScript 1.4.0

/*
 * Description or Responsability
 *
 * @namespace KINOUT
 * @class Router
 *
 * @author Javier Jimenez Villar <javi@tapquo.com> || @soyjavi
*/


(function() {

  KINOUT.Router = (function(knt, undefined_) {
    var direction, _down, _index, _left, _right, _up;
    _index = {};
    direction = function(direction) {
      _index = knt.View.index();
      switch (direction) {
        case "left":
          return _left();
        case "right":
          return _right();
        case "up":
          return _up();
        case "down":
          return _down();
      }
    };
    _left = function() {
      _index.horizontal--;
      knt.View.slide(_index.horizontal, 0, false);
      console.log(_index.horizontal);
      console.log(_index.vertical);
    };
    _right = function() {
      _index.horizontal++;
      knt.View.slide(_index.horizontal, 0);
      console.log(_index.horizontal);
      console.log(_index.vertical);
    };
    _up = function() {
      _index.vertical--;
      knt.View.slide(_index.horizontal, _index.vertical, false);
      console.log(_index.horizontal);
      console.log(_index.vertical);
    };
    _down = function() {
      _index.vertical++;
      knt.View.slide(_index.horizontal, _index.vertical);
      console.log(_index.horizontal);
      console.log(_index.vertical);
    };
    return {
      direction: direction
    };
  })(KINOUT);

}).call(this);
// Generated by CoffeeScript 1.4.0

/*
 * Description or Responsability
 *
 * @namespace KINOUT
 * @class Step
 *
 * @author Javier Jimenez Villar <javi@tapquo.com> || @soyjavi
*/


(function() {

  KINOUT.Step = (function(knt, undefined_) {
    /*
    */

    var hide, show;
    show = function() {
      return this;
    };
    /*
    */

    hide = function(horizontal_idx, vertical_idx) {};
    return {
      show: show,
      hide: hide
    };
  })(KINOUT);

}).call(this);
// Generated by CoffeeScript 1.4.0

/*
 * Description or Responsability
 *
 * @namespace KINOUT
 * @class Url
 *
 * @author Javier Jimenez Villar <javi@tapquo.com> || @soyjavi
*/


(function() {

  KINOUT.Url = (function(knt, undefined_) {
    /*
            Read the page URL (hash) to get the current
            navigational slide.
    */

    var read, write;
    read = function() {
      var bits, indexh, indexv;
      bits = window.location.hash.slice(2).split("/");
      indexh = (bits[0] ? parseInt(bits[0]) : 0);
      indexv = (bits[1] ? parseInt(bits[1]) : 0);
      knt.View.slide(indexh, indexv);
    };
    /*
            Updates the page URL (hash) to reflect the current
            navigational slide.
    */

    write = function(horizontal_idx, vertical_idx) {
      var url;
      url = "/";
      if (horizontal_idx > 0 || vertical_idx > 0) {
        url += horizontal_idx;
      }
      if (vertical_idx > 0) {
        url += "/" + vertical_idx;
      }
      window.location.hash = url;
    };
    return {
      read: read,
      write: write
    };
  })(KINOUT);

}).call(this);
// Generated by CoffeeScript 1.4.0

/*
 * Description or Responsability
 *
 * @namespace KINOUT
 * @class View
 *
 * @author Javier Jimenez Villar <javi@tapquo.com> || @soyjavi
*/


(function() {

  KINOUT.View = (function(knt, $$, undefined_) {
    var SELECTOR, STYLE, index, render, slide, _index, _saveNewIndexes, _steps, _updateProgress, _updateSlideIndexes, _updateSlides;
    SELECTOR = knt.Constants.SELECTOR;
    STYLE = knt.Constants.STYLE;
    _index = knt.index;
    _steps = [];
    slide = function(horizontal, vertical, next_step) {
      if (next_step == null) {
        next_step = true;
      }
      if (!knt.Element.steps(next_step)) {
        _saveNewIndexes(horizontal, vertical);
        _updateSlideIndexes();
        knt.Url.write(_index.horizontal, _index.vertical);
      }
    };
    index = function() {
      return {
        'horizontal': _index.horizontal,
        'vertical': _index.vertical
      };
    };
    _saveNewIndexes = function(horizontal, vertical) {
      _index.horizontal = (horizontal === undefined ? _index.horizontal : horizontal);
      _index.vertical = (vertical === undefined ? _index.vertical : vertical);
    };
    _updateSlideIndexes = function() {
      _index.horizontal = _updateSlides(SELECTOR.SLIDE, _index.horizontal);
      _index.vertical = _updateSlides(SELECTOR.SUBSLIDE, _index.vertical);
      _updateProgress();
    };
    _updateProgress = function() {
      var horizontal, slides, subslides, vertical;
      slides = knt.Element.slides();
      horizontal = parseInt((_index.horizontal * 100) / (slides.length - 1));
      window.requestAnimationFrame(function() {
        return knt.Element.progress("horizontal", horizontal);
      });
      vertical = 0;
      subslides = knt.Element.subslides(_index.horizontal);
      if (subslides.length > 1) {
        vertical = parseInt(((_index.vertical + 1) * 100) / subslides.length);
      }
      return window.requestAnimationFrame(function() {
        return knt.Element.progress("vertical", vertical);
      });
    };
    _updateSlides = function(selector, index) {
      var slides;
      slides = Array.prototype.slice.call(document.querySelectorAll(selector));
      if (slides.length) {
        index = Math.max(Math.min(index, slides.length - 1), 0);
        render(slides, index);
      } else {
        index = 0;
      }
      return index;
    };
    render = function(slides, index) {
      slides[index].setAttribute("class", STYLE.PRESENT);
      slides.slice(0, index).map(function(element) {
        return element.setAttribute("class", STYLE.PAST);
      });
      return slides.slice(index + 1).map(function(element) {
        return element.setAttribute("class", STYLE.FUTURE);
      });
    };
    return {
      slide: slide,
      index: index,
      render: render
    };
  })(KINOUT, Quo);

}).call(this);
