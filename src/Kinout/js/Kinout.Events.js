// Generated by CoffeeScript 1.4.0

/*
 * Description or Responsability
 *
 * @namespace KINOUT
 * @class Events
 *
 * @author Javier Jimenez Villar <javi@tapquo.com> || @soyjavi
*/


(function() {

  KINOUT.Events = (function(knt, $$, undefined_) {
    var DIRECTION, EVENTS, init, _analizeKeyEvent, _analizePoint, _onClick, _onHashChange, _onKeyDown, _onTouch, _onWheel, _subscribeEvents;
    EVENTS = {
      KEYDOWN: "keydown",
      CLICK: "click",
      TOUCH: "touchstart",
      HASHCHANGE: "hashchange",
      MOUSEWHEEL: "mousewheel"
    };
    DIRECTION = {
      LEFT: "left",
      RIGHT: "right",
      UP: "up",
      DOWN: "down"
    };
    init = function() {
      _subscribeEvents();
    };
    _subscribeEvents = function() {
      if ($$.isMobile()) {
        $$(document).on(EVENTS.TOUCH, _onTouch, false);
      } else {
        $$(document).on(EVENTS.KEYDOWN, _onKeyDown, false);
        $$(document).on(EVENTS.CLICK, _onClick, false);
        $$(document).on(EVENTS.MOUSEWHEEL, _onWheel, false);
      }
    };
    _onKeyDown = function(event) {
      if (event.keyCode >= 37 && event.keyCode <= 40) {
        _analizeKeyEvent(event);
        event.preventDefault();
      }
    };
    _onTouch = function(event) {
      var point;
      if (event.touches.length === 1) {
        event.preventDefault();
        point = {
          x: event.touches[0].clientX,
          y: event.touches[0].clientY
        };
        _analizePoint(point);
      }
    };
    _onClick = function(event) {
      var point;
      if ($$(event.target).closest('a').length) {
        return;
      }
      event.preventDefault();
      point = {
        x: event.clientX,
        y: event.clientY
      };
      _analizePoint(point);
    };
    _onWheel = function(event) {};
    _onHashChange = function() {
      return knt.Url.read();
    };
    _analizeKeyEvent = function(event) {
      switch (event.keyCode) {
        case 37:
          knt.Router.direction(DIRECTION.LEFT);
          break;
        case 39:
          knt.Router.direction(DIRECTION.RIGHT);
          break;
        case 38:
          knt.Router.direction(DIRECTION.UP);
          break;
        case 40:
          knt.Router.direction(DIRECTION.DOWN);
      }
    };
    _analizePoint = function(point) {
      var window_height, window_width;
      window_width = window.innerWidth * 0.3;
      window_height = window.innerHeight * 0.3;
      if (point.x < window_width) {
        knt.Router.direction(DIRECTION.LEFT);
      } else if (point.x > window.innerWidth - window_width) {
        knt.Router.direction(DIRECTION.RIGHT);
      } else if (point.y < window_height) {
        knt.Router.direction(DIRECTION.UP);
      } else {
        if (point.y > window.innerHeight - window_height) {
          knt.Router.direction(DIRECTION.DOWN);
        }
      }
    };
    return {
      init: init
    };
  })(KINOUT, Quo);

}).call(this);
